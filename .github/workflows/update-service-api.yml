name: Update Service API Documentation

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_call:

jobs:
  update-service-api:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests
        
    - name: Generate timestamp
      id: timestamp
      run: |
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
        echo "Generated at: ${TIMESTAMP}"
        
    - name: Sync OpenAPI Specification
      id: sync-spec
      run: |
        echo "Syncing OpenAPI specification from remote service..."
        OUTPUT=$(python scripts/reference-generation/sync_openapi_spec.py 2>&1)
        echo "$OUTPUT"
        
        # Check if spec changed
        if echo "$OUTPUT" | grep -q "OpenAPI spec has changed"; then
          echo "spec_changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected in OpenAPI spec"
        else
          echo "spec_changed=false" >> $GITHUB_OUTPUT
          echo "No changes in OpenAPI spec"
        fi
        
    - name: Update Service API Landing Page
      if: steps.sync-spec.outputs.spec_changed == 'true'
      run: |
        echo "Updating Service API landing page with current endpoints..."
        python scripts/reference-generation/update_service_api_landing.py
        
    - name: Fix Service API Links
      run: |
        echo "Converting Service API links to fully qualified URLs..."
        python scripts/reference-generation/fix_service_api_links.py
        
    - name: Check for changes
      id: check-changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected in repository"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected"
        fi
        
    - name: Create Pull Request
      if: steps.check-changes.outputs.has_changes == 'true'
      id: create-pr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: Update Service API documentation"
        title: "Update Service API documentation"
        draft: false
        body: |
          This PR updates the Service API documentation based on the latest OpenAPI specification.
          
          **Generated on**: ${{ steps.timestamp.outputs.timestamp }}
          **OpenAPI spec source**: https://trace.wandb.ai/openapi.json
          
          ### Changes
          - Synced latest OpenAPI specification from the Weave service
          - Updated Service API landing page with current endpoints
          - Fixed Service API links to use fully qualified URLs
          
          ### Review Checklist
          - [ ] Verify new endpoints are correctly listed
          - [ ] Check that removed endpoints (if any) are intentional
          - [ ] Confirm all Service API links work correctly
          
          ---
          *This PR was automatically generated by the Service API update workflow.*
        branch: update-service-api-${{ github.run_number }}
        delete-branch: true
        labels: |
          documentation
          automated
          service-api
          weave
    
    - name: Display Result
      run: |
        if [ "${{ steps.check-changes.outputs.has_changes }}" == "true" ]; then
          if [ -n "${{ steps.create-pr.outputs.pull-request-number }}" ]; then
            PR_URL="https://github.com/${{ github.repository }}/pull/${{ steps.create-pr.outputs.pull-request-number }}"
            echo "üìù PR created successfully!"
            echo "üîó Review the changes at: $PR_URL"
            echo "::notice title=Pull Request Created::A PR has been created for Service API updates: $PR_URL"
          fi
        else
          echo "‚úÖ Service API documentation is up to date"
          echo "::notice title=No Updates Needed::Service API documentation is already up to date"
        fi
