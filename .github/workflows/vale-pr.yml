name: Vale (on PR push when opted-in)

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  run-vale:
    if: |
      github.event_name == 'pull_request' &&
      (contains(github.event.pull_request.title, '[vale]') || contains(github.event.pull_request.title, '[VALE]'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Vale
        run: |
          curl -sL https://github.com/errata-ai/vale/releases/download/v3.9.6/vale_3.9.6_Linux_64-bit.tar.gz -o vale.tar.gz
          mkdir -p /tmp/vale && tar -xzf vale.tar.gz -C /tmp/vale
          sudo mv /tmp/vale/vale /usr/local/bin/
          vale -v
      - name: Get changed Markdown files
        id: changes
        run: |
          set -e
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          echo "BASE: $BASE_SHA"
          echo "HEAD: $HEAD_SHA"
          FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -E '\.md$' || true)
          echo "Changed MD files:\n$FILES"
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Run Vale on changed files (fail on error)
        if: steps.changes.outputs.files != ''
        run: |
          set -e
          echo "Using PR-specific Vale config (.vale.pr.ini)"
          printf "%s\n" "${{ steps.changes.outputs.files }}" | xargs -r vale --config=.vale.pr.ini --minAlertLevel=error
