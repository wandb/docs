name: GPT Editor

on:
  workflow_dispatch:
    inputs:
      file_path:
        description: 'Path to the file to be edited'
        required: true
        type: string
      source_branch:
        description: 'Source branch to create new branch from and target PR to (default: main)'
        required: false
        type: string
      commit_message:
        description: 'Commit message'
        required: false
        default: 'GPT-edited content'
        type: string
      pr_title:
        description: 'Pull request title'
        required: false
        default: 'GPT Editor: Automated content update'
        type: string
      pr_body:
        description: 'Pull request description'
        required: false
        default: 'This PR contains changes made by the GPT Editor script.'
        type: string

jobs:
  gpt-edit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          # Install Python dependencies
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install weave openai
          
          # Install Vale
          curl -sL https://github.com/errata-ai/vale/releases/download/v3.9.6/vale_3.9.6_Linux_64-bit.tar.gz -o vale.tar.gz
          mkdir -p /tmp/vale
          tar -xzf vale.tar.gz -C /tmp/vale
          sudo mv /tmp/vale/vale /usr/local/bin/
          vale -v

      - name: Debug Vale configuration
        run: |
          vale sync
          # Check Vale config
          echo "Vale configuration:"
          cat .vale.ini
          
          # Check styles directory
          STYLES_PATH=$(grep StylesPath .vale.ini | awk '{print $3}')
          echo "StylesPath from config: $STYLES_PATH"
          if [ -d "$STYLES_PATH" ]; then
            echo "Styles directory exists, contents:"
            ls -la "$STYLES_PATH"
          else
            echo "Warning: Styles directory not found"
          fi
          
          # Test Vale directly
          echo "Testing Vale directly on the target file:"
          vale --no-exit "${{ github.event.inputs.file_path }}" || echo "Vale exited with code $?"

      - name: Set branch name
        id: branch
        run: |
          if [ -z "${{ github.event.inputs.branch_name }}" ]; then
            timestamp=$(date +%Y%m%d%H%M%S)
            echo "branch_name=gpt-edit-${timestamp}" >> $GITHUB_OUTPUT
          else
            echo "branch_name=${{ github.event.inputs.branch_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Create new branch
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git checkout -b ${{ steps.branch.outputs.branch_name }}

      - name: Verify file exists
        run: |
          if [ ! -f "${{ github.event.inputs.file_path }}" ]; then
            echo "Error: File '${{ github.event.inputs.file_path }}' does not exist in the repository."
            exit 1
          fi

      - name: Run GPT Editor script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/gpt-editor.py ${{ github.event.inputs.file_path }}

      - name: Commit changes
        run: |
          git add .
          git commit -m "GPT-edited content"
          git push --set-upstream origin ${{ steps.branch.outputs.branch_name }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ${{ github.event.inputs.commit_message }}
          branch: ${{ steps.branch.outputs.branch_name }}
          delete-branch: false
          title: ${{ github.event.inputs.pr_title }}
          body: ${{ github.event.inputs.pr_body }}
          draft: false